#!/usr/bin/env bash

case $1 in
build*)
  docker-compose up
  docker rm $(docker ps -aq)
  ;;
get*)
  case $2 in
  nodejs*)
    status=$(docker container inspect --format='{{.State.Status}}' nodejs)
    case $status in
    exited*)
      docker start -i nodejs
      ;;
    running*)
      docker exec -it nodejs /bin/zsh
      ;;
    *)
      docker run \
        -v $(pwd)/base/tmux.conf:/root/.tmux.conf \
        -v $(pwd)/base/.vim:/root/.vim \
        -v $(pwd)/base/vimrc:/root/.vimrc \
        -v $(pwd)/base/.zprezto:/root/.zprezto \
        -v $(pwd)/base/.zprezto/runcoms/zlogin:/root/.zlogin \
        -v $(pwd)/base/.zprezto/runcoms/zlogout:/root/.zlogout \
        -v $(pwd)/base/.zprezto/runcoms/zprofile:/root/.zprofile \
        -v $(pwd)/base/.zprezto/runcoms/zshenv:/root/.zshenv \
        -v $(pwd)/base/zpreztorc:/root/.zpreztorc \
        -v $(pwd)/nodejs/zshrc:/root/.zshrc \
        -v $(pwd)/nodejs/data:/root/data \
        --name nodejs \
        --network host \
        -h $(hostname)-docker-nodejs \
        -it tao/nodejs /bin/zsh
      ;;
    esac
    ;;
  nginx*)
    status=$(docker container inspect --format='{{.State.Status}}' nginx)
    case $status in
    exited*)
      docker start -i nginx
      ;;
    running*)
      docker exec -it nginx /bin/zsh
      ;;
    *)
      docker run \
        -v $(pwd)/base/.vim:/root/.vim \
        -v $(pwd)/base/vimrc:/root/.vimrc \
        -v $(pwd)/base/.zprezto:/root/.zprezto \
        -v $(pwd)/base/.zprezto/runcoms/zlogin:/root/.zlogin \
        -v $(pwd)/base/.zprezto/runcoms/zlogout:/root/.zlogout \
        -v $(pwd)/base/.zprezto/runcoms/zprofile:/root/.zprofile \
        -v $(pwd)/base/.zprezto/runcoms/zshenv:/root/.zshenv \
        -v $(pwd)/base/zpreztorc:/root/.zpreztorc \
        -v $(pwd)/nginx/zshrc:/root/.zshrc \
        -v $(pwd)/nginx/nginx.conf:/etc/nginx/nginx.conf \
        -v $(pwd)/nginx/data:/root/data \
        --name nginx \
        --network host \
        -h $(hostname)-docker-nginx \
        -it tao/nginx /bin/zsh
      ;;
    esac
    ;;
  *)
    echo "You must specify a container: $ ./shell.sh get [option]"
    echo "     nodejs - get the node.js container"
    echo "     nginx  - get the nginx container"
    ;;
  esac
  ;;
*)
  echo "You must specify an option: $ ./shell.sh [option]"
  echo "     build  - build the images."
  echo "     get    - get me a container"
  ;;
esac
