#!/usr/bin/env bash

case $1 in
up*)
  if [ ! -f "$(pwd)/postgresql/data/password" ]; then
    echo "postgreqls password file not found"
    exit
  fi
  if [ ! -f "$(pwd)/nginx/data/nginx.conf" ]; then
    echo "nginx config file not found"
    exit
  fi
  if [ ! -f "$(pwd)/redis/data/redis.conf" ]; then
    echo "redis config file not found"
    exit
  fi
  if [ ! -f "$(pwd)/influxdb/data/influxdb.conf" ]; then
    echo "influxdb config file not found"
    exit
  fi
  if [ ! -f "$(pwd)/grafana/data/env" ]; then
    echo "grafana env file not found"
    exit
  fi

  if [ -d "$(pwd)/base/.zprezto" ]; then
    echo 'zprezto exist'
  else
    git clone --recursive https://github.com/sorin-ionescu/prezto.git "$(pwd)/base/.zprezto"
  fi
  mkdir -p "$(pwd)/base/.vim"
  mkdir -p "$(pwd)/base/.vim/bundle"
  if [ -d "$(pwd)/base/.vim/bundle/Vundle.vim" ]; then
    echo 'vundle exist'
  else
    git clone https://github.com/VundleVim/Vundle.vim.git "$(pwd)/base/.vim/bundle/Vundle.vim"
  fi
  docker-compose up -d
  docker rm -f tao-base
  ;;
down*)
  docker-compose down
  ;;
get*)
  case $2 in
  nodejs*)
    # status=$(docker container inspect --format='{{.State.Status}}' nodejs)
    docker exec -it nodejs /bin/zsh -c "stty cols 318 && stty rows 67 && /bin/zsh"
    ;;
  nginx*)
    docker exec -it nginx /bin/zsh
    ;;
  postgres*)
    docker exec -it postgres psql -U postgres
    ;;
  redis*)
    docker exec -it redis redis-cli
    ;;
  influxdb*)
    docker exec -it influxdb influx
    ;;
  grafana*)
    docker exec -it grafana /bin/bash
    ;;
  *)
    echo "You must specify a container: $ ./shell.sh get [option]"
    echo "     nginx    - get the nginx container"
    echo "     redis    - get the redis container"
    echo "     nodejs   - get the node.js container"
    echo "     grafana  - get the Grafana container"
    echo "     postgres - get the PostgreSQL container"
    echo "     influxdb - get the InfluxDB container"
    ;;
  esac
  ;;
*)
  echo "You must specify an option: $ ./shell.sh [option]"
  echo "     up     - up all services"
  echo "     down   - down all services"
  echo "     get    - get me a container"
  ;;
esac
