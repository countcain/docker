user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 768;
    # multi_accept on;
}

http {

    ##
    # Basic Settings
    ##

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    # server_tokens off;

    # server_names_hash_bucket_size 64;
    # server_name_in_redirect off;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    ##
    # SSL Settings
    ##

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
    ssl_prefer_server_ciphers on;

    ##
    # Logging Settings
    ##

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    ##
    # Gzip Settings
    ##

    gzip on;

    # gzip_vary on;
    # gzip_proxied any;
    # gzip_comp_level 6;
    # gzip_buffers 16 8k;
    # gzip_http_version 1.1;
    # gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    ##
    # Virtual Host Configs
    ##

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    server {
        listen 80;
        server_name grafana.example.com;
        location / {
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_pass_request_headers on;
            proxy_pass http://grafana:3000;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            client_max_body_size 3M;
        }
    }

    server {
        listen 80;
        server_name example.com www.example.com localhost;
        location /.well-known {
            alias /var/www/html/.well-known;
        }
        location /index.nginx-debian.html {
            alias /var/www/html/index.nginx-debian.html;
        }
        location / {
            return 301 https://example.com$request_uri;
        }
    }

    server {
        listen 443 ssl http2;
        server_name www.example.com;
        ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;
        location / {
            return 301 https://example.com$request_uri;
        }
    }

    server {
        listen 443 ssl http2;
        server_name example.com localhost;
        ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;
        location /.well-known {
            alias /var/www/html/.well-known;
        }
        location /index.nginx-debian.html {
            alias /var/www/html/index.nginx-debian.html;
        }
        location ~ ^/(iframes|captcha) {
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_pass_request_headers on;
            proxy_pass http://tao-app:18081;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            client_max_body_size 3M;
        }
        location / {
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_pass http://tao-app:18080;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            client_max_body_size 3M;
        }
    }
}
